<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

    <!-- 声明应用全局的初始化参数 -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>applicationContext.xml</param-value>
    </context-param>

    <!-- 声明监听器，它在建立、修改和删除会话或servlet环境时得到事件通知 -->
    <listener>
        <listener-class>com.minis.minispring.web.context.ContextLoaderListener</listener-class>
    </listener>
    
    <servlet>
        <servlet-name>minisMVC</servlet-name>
        <!-- 指定Servlet对应类，也是Web程序的核心代码 -->
        <servlet-class>com.minis.minispring.web.servlet.DispatcherServlet</servlet-class>
            <init-param>
                <param-name>contextConfigLocation</param-name>
                <!-- 初始化配置文件地址，表示所有的配置参数都由这里引入 -->
                <param-value>/WEB-INF/minisMVC-servlet.xml</param-value>
            </init-param>
            <!-- 当值大于等于0时，容器启动时加载该Servlet，且值越小启动优先级越高。如果为负数，则容器启动时不会加载该Servlet -->
            <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet-mapping>
        <!-- Servlet自定义名称 -->
        <servlet-name>minisMVC</servlet-name>
        <!-- 标签为"/"，表示拦截所有的URL -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>